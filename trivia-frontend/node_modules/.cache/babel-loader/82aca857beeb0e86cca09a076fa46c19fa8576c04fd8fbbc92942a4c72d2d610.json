{"ast":null,"code":"var _jsxFileName = \"/Users/brandenhicks/Desktop/CIS4004/trivia-frontend/src/StartQuiz.js\",\n  _s = $RefreshSig$();\n// src/StartQuiz.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction StartQuiz({\n  username\n}) {\n  _s();\n  const [userStats, setUserStats] = useState({\n    high_score: '--',\n    total_games: '--',\n    avg_score: '--'\n  });\n  const [leaderboard, setLeaderboard] = useState([]);\n  const [quizStarted, setQuizStarted] = useState(false);\n  const [timer, setTimer] = useState(60);\n  const [question, setQuestion] = useState(null);\n  const [done, setDone] = useState(false);\n  const [scoreData, setScoreData] = useState({\n    score: 0,\n    correct_count: 0,\n    wrong_count: 0\n  });\n  const timerIdRef = useRef(null);\n\n  // Helper function: If response is 401, redirect to /login.\n  const checkAuth = async response => {\n    if (response.status === 401) {\n      window.location.href = '/login';\n      throw new Error('Unauthorized');\n    }\n    return response;\n  };\n\n  // On mount, fetch stats\n  useEffect(() => {\n    fetchStats();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Timer logic\n  useEffect(() => {\n    if (quizStarted && timer > 0 && !done) {\n      timerIdRef.current = setInterval(() => {\n        setTimer(prev => prev - 1);\n      }, 1000);\n    }\n    return () => clearInterval(timerIdRef.current);\n  }, [quizStarted, timer, done]);\n  useEffect(() => {\n    if (timer <= 0 && quizStarted && !done) {\n      finishQuiz();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [timer, quizStarted, done]);\n  const fetchStats = async () => {\n    try {\n      const res = await fetch('/get_stats');\n      await checkAuth(res);\n      const data = await res.json();\n      if (data.error) {\n        console.error(\"Failed to get stats:\", data.error);\n        return;\n      }\n      // If username is empty, force user to choose one.\n      if (!data.user_stats.username) {\n        window.location.href = '/choose-username';\n        return;\n      }\n      setUserStats(data.user_stats);\n      setLeaderboard(data.leaderboard);\n    } catch (err) {\n      console.error(\"Error fetching stats:\", err);\n    }\n  };\n  const startQuiz = async () => {\n    try {\n      const res = await fetch('/start_quiz', {\n        method: 'POST'\n      });\n      await checkAuth(res);\n      const data = await res.json();\n      console.log(\"Quiz started:\", data);\n      setQuizStarted(true);\n      setTimer(60);\n      setDone(false);\n      setQuestion(null);\n      setScoreData({\n        score: 0,\n        correct_count: 0,\n        wrong_count: 0\n      });\n      loadQuestion();\n    } catch (err) {\n      console.error(\"Error starting quiz:\", err);\n    }\n  };\n  const loadQuestion = async () => {\n    try {\n      const res = await fetch('/get_question');\n      await checkAuth(res);\n      const qdata = await res.json();\n      console.log(\"Got question:\", qdata);\n      if (qdata.done) {\n        finishQuiz();\n      } else {\n        setQuestion(qdata);\n      }\n    } catch (err) {\n      console.error(\"Error loading question:\", err);\n    }\n  };\n  const submitAnswer = async answer => {\n    if (!question) return;\n    try {\n      const res = await fetch('/submit_answer', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          question_id: question.question_id,\n          answer: answer\n        })\n      });\n      await checkAuth(res);\n      await res.json();\n      loadQuestion();\n    } catch (err) {\n      console.error(\"Error submitting answer:\", err);\n    }\n  };\n  const finishQuiz = async () => {\n    clearInterval(timerIdRef.current);\n    try {\n      const res = await fetch('/finish_quiz', {\n        method: 'POST'\n      });\n      await checkAuth(res);\n      const result = await res.json();\n      console.log(\"Quiz finished:\", result);\n      setDone(true);\n      setQuizStarted(false);\n      setQuestion(null);\n      setScoreData({\n        score: result.score,\n        correct_count: result.correct_count,\n        wrong_count: result.wrong_count\n      });\n      fetchStats();\n    } catch (err) {\n      console.error(\"Error finishing quiz:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome to Trivia Paradise, \", username || 'UnknownUser', \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your Stats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"High Score: \", userStats.high_score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Games: \", userStats.total_games]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Average Score: \", userStats.avg_score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Leaderboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        cellPadding: \"5\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"High Score\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: leaderboard.map((row, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.username || \"Unknown\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.high_score\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 33\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this), !quizStarted && !done && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startQuiz,\n      children: \"Start Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }, this), quizStarted && !done && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Time Left: \", timer, \" seconds\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 21\n      }, this), question ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: question.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => submitAnswer('True'),\n          children: \"True\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => submitAnswer('False'),\n          children: \"False\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading question...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }, this), done && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Quiz Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Final Score: \", scoreData.score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Correct: \", scoreData.correct_count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Wrong: \", scoreData.wrong_count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startQuiz,\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 9\n  }, this);\n}\n_s(StartQuiz, \"JlzvDaHPfdNYwehJ3yKxo1uxlDM=\");\n_c = StartQuiz;\nexport default StartQuiz;\nvar _c;\n$RefreshReg$(_c, \"StartQuiz\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","StartQuiz","username","_s","userStats","setUserStats","high_score","total_games","avg_score","leaderboard","setLeaderboard","quizStarted","setQuizStarted","timer","setTimer","question","setQuestion","done","setDone","scoreData","setScoreData","score","correct_count","wrong_count","timerIdRef","checkAuth","response","status","window","location","href","Error","fetchStats","current","setInterval","prev","clearInterval","finishQuiz","res","fetch","data","json","error","console","user_stats","err","startQuiz","method","log","loadQuestion","qdata","submitAnswer","answer","headers","body","JSON","stringify","question_id","result","children","fileName","_jsxFileName","lineNumber","columnNumber","border","cellPadding","map","row","i","onClick","_c","$RefreshReg$"],"sources":["/Users/brandenhicks/Desktop/CIS4004/trivia-frontend/src/StartQuiz.js"],"sourcesContent":["// src/StartQuiz.js\nimport React, { useState, useEffect, useRef } from 'react';\n\nfunction StartQuiz({ username }) {\n    const [userStats, setUserStats] = useState({\n        high_score: '--',\n        total_games: '--',\n        avg_score: '--'\n    });\n    const [leaderboard, setLeaderboard] = useState([]);\n    const [quizStarted, setQuizStarted] = useState(false);\n    const [timer, setTimer] = useState(60);\n    const [question, setQuestion] = useState(null);\n    const [done, setDone] = useState(false);\n    const [scoreData, setScoreData] = useState({\n        score: 0,\n        correct_count: 0,\n        wrong_count: 0\n    });\n\n    const timerIdRef = useRef(null);\n\n    // Helper function: If response is 401, redirect to /login.\n    const checkAuth = async (response) => {\n        if (response.status === 401) {\n            window.location.href = '/login';\n            throw new Error('Unauthorized');\n        }\n        return response;\n    };\n\n    // On mount, fetch stats\n    useEffect(() => {\n        fetchStats();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    // Timer logic\n    useEffect(() => {\n        if (quizStarted && timer > 0 && !done) {\n            timerIdRef.current = setInterval(() => {\n                setTimer(prev => prev - 1);\n            }, 1000);\n        }\n        return () => clearInterval(timerIdRef.current);\n    }, [quizStarted, timer, done]);\n\n    useEffect(() => {\n        if (timer <= 0 && quizStarted && !done) {\n            finishQuiz();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [timer, quizStarted, done]);\n\n    const fetchStats = async () => {\n        try {\n            const res = await fetch('/get_stats');\n            await checkAuth(res);\n            const data = await res.json();\n            if (data.error) {\n                console.error(\"Failed to get stats:\", data.error);\n                return;\n            }\n            // If username is empty, force user to choose one.\n            if (!data.user_stats.username) {\n                window.location.href = '/choose-username';\n                return;\n            }\n            setUserStats(data.user_stats);\n            setLeaderboard(data.leaderboard);\n        } catch (err) {\n            console.error(\"Error fetching stats:\", err);\n        }\n    };\n\n    const startQuiz = async () => {\n        try {\n            const res = await fetch('/start_quiz', { method: 'POST' });\n            await checkAuth(res);\n            const data = await res.json();\n            console.log(\"Quiz started:\", data);\n            setQuizStarted(true);\n            setTimer(60);\n            setDone(false);\n            setQuestion(null);\n            setScoreData({ score: 0, correct_count: 0, wrong_count: 0 });\n            loadQuestion();\n        } catch (err) {\n            console.error(\"Error starting quiz:\", err);\n        }\n    };\n\n    const loadQuestion = async () => {\n        try {\n            const res = await fetch('/get_question');\n            await checkAuth(res);\n            const qdata = await res.json();\n            console.log(\"Got question:\", qdata);\n            if (qdata.done) {\n                finishQuiz();\n            } else {\n                setQuestion(qdata);\n            }\n        } catch (err) {\n            console.error(\"Error loading question:\", err);\n        }\n    };\n\n    const submitAnswer = async (answer) => {\n        if (!question) return;\n        try {\n            const res = await fetch('/submit_answer', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    question_id: question.question_id,\n                    answer: answer\n                })\n            });\n            await checkAuth(res);\n            await res.json();\n            loadQuestion();\n        } catch (err) {\n            console.error(\"Error submitting answer:\", err);\n        }\n    };\n\n    const finishQuiz = async () => {\n        clearInterval(timerIdRef.current);\n        try {\n            const res = await fetch('/finish_quiz', { method: 'POST' });\n            await checkAuth(res);\n            const result = await res.json();\n            console.log(\"Quiz finished:\", result);\n            setDone(true);\n            setQuizStarted(false);\n            setQuestion(null);\n            setScoreData({\n                score: result.score,\n                correct_count: result.correct_count,\n                wrong_count: result.wrong_count\n            });\n            fetchStats();\n        } catch (err) {\n            console.error(\"Error finishing quiz:\", err);\n        }\n    };\n\n    return (\n        <div>\n            <h1>Welcome to Trivia Paradise, {username || 'UnknownUser'}!</h1>\n\n            {/* User Stats */}\n            <div>\n                <h3>Your Stats</h3>\n                <p>High Score: {userStats.high_score}</p>\n                <p>Total Games: {userStats.total_games}</p>\n                <p>Average Score: {userStats.avg_score}</p>\n            </div>\n            <hr />\n\n            {/* Leaderboard */}\n            <div>\n                <h3>Leaderboard</h3>\n                <table border=\"1\" cellPadding=\"5\">\n                    <thead>\n                        <tr>\n                            <th>Username</th>\n                            <th>High Score</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {leaderboard.map((row, i) => (\n                            <tr key={i}>\n                                <td>{row.username || \"Unknown\"}</td>\n                                <td>{row.high_score}</td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n            <hr />\n\n            {/* Start Button / Quiz / Results */}\n            {!quizStarted && !done && (\n                <button onClick={startQuiz}>Start Quiz</button>\n            )}\n\n            {quizStarted && !done && (\n                <div>\n                    <h2>Time Left: {timer} seconds</h2>\n                    {question ? (\n                        <>\n                            <p>{question.question}</p>\n                            <button onClick={() => submitAnswer('True')}>True</button>\n                            <button onClick={() => submitAnswer('False')}>False</button>\n                        </>\n                    ) : (\n                        <p>Loading question...</p>\n                    )}\n                </div>\n            )}\n\n            {done && (\n                <div>\n                    <h2>Quiz Results</h2>\n                    <p>Final Score: {scoreData.score}</p>\n                    <p>Correct: {scoreData.correct_count}</p>\n                    <p>Wrong: {scoreData.wrong_count}</p>\n                    <button onClick={startQuiz}>Play Again</button>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default StartQuiz;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}